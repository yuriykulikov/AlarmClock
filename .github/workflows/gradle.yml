name: Gradle

on:
  push:
    branches: [ develop ]
  pull_request:
    branches: [ develop ]

jobs:
  build-develop:
    runs-on: macos-latest
    concurrency:
      group: build-${{ github.workflow }}-${{ github.ref }}
      cancel-in-progress: true
    env:
      ACRA_EMAIL: ${{ secrets.ACRA_EMAIL }}
    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 11
      uses: actions/setup-java@v4
      with:
        java-version: '11'
        distribution: 'adopt'
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
    - name: Spotless
      run: ./gradlew spotlessCheck
    - name: Assemble
      run: ./gradlew assembleDevelopDebug
    - name: Unit tests
      run: ./gradlew testDevelopDebugUnitTest
    - name: Espresso tests
      uses: reactivecircus/android-emulator-runner@v2
      with:
        api-level: 22
        script: ./gradlew connectedDevelopDebugAndroidTest
    - name: Generate coverage report
      run: ./gradlew jacocoTestReport
    - name: Upload codecov
      uses: codecov/codecov-action@v3
      with:
        files: ./app/build/reports/jacoco/jacocoTestReport/jacocoTestReport.xml
    - name: Upload Reports
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: Unit Test Reports
        path: ${{ github.workspace }}/**/build/reports/**/*
        retention-days: 5

  publish-develop:
    needs: build-develop
    if: github.ref == 'refs/heads/develop'
    runs-on: ubuntu-latest
    concurrency:
      group: publish-develop-${{ github.workflow }}-${{ github.ref }}
      cancel-in-progress: true
    env:
      ACRA_EMAIL: ${{ secrets.ACRA_EMAIL }}
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 11
        uses: actions/setup-java@v4
        with:
          java-version: '11'
          distribution: 'adopt'
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      - name: Extract upload store
        run: 'echo "$UPLOAD_STORE_BASE64" | base64 --decode > app/upload-keystore.jks'
        shell: bash
        env:
          UPLOAD_STORE_BASE64: ${{secrets.UPLOAD_STORE_BASE64}}
      - name: Bundle develop
        if: github.ref == 'refs/heads/develop'
        run: ./gradlew :app:bundleDevelopRelease
        env:
          UPLOAD_KEYSTORE_PASSWORD: ${{secrets.UPLOAD_KEYSTORE_PASSWORD}}
          UPLOAD_KEY_ALIAS: ${{secrets.UPLOAD_KEY_ALIAS}}
          UPLOAD_KEY_PASSWORD: ${{secrets.UPLOAD_KEY_PASSWORD}}
      - name: Publish develop to google play
        if: github.ref == 'refs/heads/develop'
        uses: r0adkll/upload-google-play@v1.1.3
        continue-on-error: true
        with:
          serviceAccountJsonPlainText: ${{ secrets.SERVICE_ACCOUNT_JSON_PLAIN_TEXT }}
          packageName: com.better.alarm
          releaseFiles: app/build/outputs/bundle/developRelease/app-develop-release.aab
          track: internal
          inAppUpdatePriority: 2
          # whatsNewDirectory: distribution/whatsnew
          # mappingFile: app/build/outputs/mapping/release/mapping.txt
  publish-premium:
    needs: build-develop
    if: github.ref == 'refs/heads/develop'
    runs-on: ubuntu-latest
    concurrency:
      group: publish-premium-${{ github.workflow }}-${{ github.ref }}
      cancel-in-progress: true
    env:
      ACRA_EMAIL: ${{ secrets.ACRA_EMAIL }}
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 11
        uses: actions/setup-java@v4
        with:
          java-version: '11'
          distribution: 'adopt'
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      - name: Extract upload store
        run: 'echo "$UPLOAD_STORE_BASE64" | base64 --decode > app/upload-keystore.jks'
        shell: bash
        env:
          UPLOAD_STORE_BASE64: ${{secrets.UPLOAD_STORE_BASE64}}
      - name: Bundle premium
        if: github.ref == 'refs/heads/develop'
        run: ./gradlew :app:bundlePremiumRelease
        env:
          UPLOAD_KEYSTORE_PASSWORD: ${{secrets.UPLOAD_KEYSTORE_PASSWORD}}
          UPLOAD_KEY_ALIAS: ${{secrets.UPLOAD_KEY_ALIAS}}
          UPLOAD_KEY_PASSWORD: ${{secrets.UPLOAD_KEY_PASSWORD}}
      - name: Publish premium to google play
        if: github.ref == 'refs/heads/develop'
        uses: r0adkll/upload-google-play@v1.1.3
        continue-on-error: true
        with:
          serviceAccountJsonPlainText: ${{ secrets.SERVICE_ACCOUNT_JSON_PLAIN_TEXT }}
          packageName: com.premium.alarm
          releaseFiles: app/build/outputs/bundle/premiumRelease/app-premium-release.aab
          track: internal
          inAppUpdatePriority: 2
          # whatsNewDirectory: distribution/whatsnew
          # mappingFile: app/build/outputs/mapping/release/mapping.txt
